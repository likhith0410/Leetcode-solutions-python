LeetCode Problem 191: Number of 1 Bits

Difficulty: Easy

🧠 Problem Statement:
Given a positive integer n, return the number of set bits (1s) in its binary representation.
This is also known as the Hamming Weight.

Example 1:
Input:n = 11
Output:3

Explanation:
Binary of 11 → 1011 → contains three 1s.

✅ Approach:
We can use the bit manipulation trick:
While n > 0:
-n & (n - 1) removes the lowest set bit (turns the rightmost 1 into 0).
-Increment count each time.
Continue until n becomes 0.
The count will be the number of set bits.

class Solution:
    def hammingWeight(self, n: int) -> int:
        count = 0
        while n:
            n &= (n - 1)   # remove lowest set bit
            count += 1
        return count


🔁 Dry Run:
Input: n = 11 (1011)
Step 1: n = 1011 → n & (n-1) = 1010 → count = 1
Step 2: n = 1010 → n & (n-1) = 1000 → count = 2
Step 3: n = 1000 → n & (n-1) = 0000 → count = 3
End. ✅
Final Output = 3

📊 Time Complexity:
-O(k), where k = number of set bits (worst case O(32) for 32-bit integer).

🧠 Space Complexity:
-O(1) → only counter used.
